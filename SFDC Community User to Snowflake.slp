{
    "class_id": "com-snaplogic-pipeline",
    "class_version": 9,
    "link_map": {
        "link100": {
            "dst_id": "11111111-1111-1111-1111-000000000001",
            "dst_view_id": "input0",
            "src_id": "11111111-1111-1111-1111-000000000000",
            "src_view_id": "outputRows"
        },
        "link103": {
            "dst_id": "11111111-1111-1111-1111-000000000002",
            "dst_view_id": "inputRows",
            "src_id": "11111111-1111-1111-1111-000000000001",
            "src_view_id": "output0"
        },
        "link109": {
            "dst_id": "11111111-1111-1111-1111-000000000003",
            "dst_view_id": "input101",
            "src_id": "11111111-1111-1111-1111-000000000002",
            "src_view_id": "output0"
        }
    },
    "property_map": {
        "error": {
            "error_behavior": {
                "value": "none"
            }
        },
        "info": {
            "author": {
                "value": ""
            },
            "label": {},
            "notes": {
                "value": null
            },
            "pipeline_doc_uri": {
                "value": null
            },
            "purpose": {
                "value": null
            }
        },
        "input": {},
        "output": {
            "11111111-1111-1111-1111-000000000003_output102": {
                "label": {
                    "value": "Snowflake - Multi Execute - output0"
                },
                "view_type": {
                    "value": "document"
                }
            }
        },
        "settings": {
            "error_param_table": {
                "value": []
            },
            "error_pipeline": {
                "expression": false,
                "value": null
            },
            "imports": {
                "value": []
            },
            "param_table": {
                "value": [
                    {
                        "capture": {
                            "value": false
                        },
                        "data_type": {
                            "value": "string"
                        },
                        "description": {
                            "value": null
                        },
                        "key": {
                            "value": "mssql_server_name"
                        },
                        "required": {
                            "value": false
                        },
                        "value": {
                            "value": "950pbi02.aaanet.com"
                        }
                    },
                    {
                        "capture": {
                            "value": false
                        },
                        "data_type": {
                            "value": "string"
                        },
                        "description": {
                            "value": null
                        },
                        "key": {
                            "value": "mssql_database_name"
                        },
                        "required": {
                            "value": false
                        },
                        "value": {
                            "value": "SalesForceRepl"
                        }
                    },
                    {
                        "capture": {
                            "value": false
                        },
                        "data_type": {
                            "value": "string"
                        },
                        "description": {
                            "value": null
                        },
                        "key": {
                            "value": "Snowflake_Database"
                        },
                        "required": {
                            "value": false
                        },
                        "value": {
                            "value": "SNOWPLOW"
                        }
                    },
                    {
                        "capture": {
                            "value": false
                        },
                        "data_type": {
                            "value": "string"
                        },
                        "description": {
                            "value": null
                        },
                        "key": {
                            "value": "Snowflake_Warehouse"
                        },
                        "required": {
                            "value": false
                        },
                        "value": {
                            "value": "DEV_BI"
                        }
                    },
                    {
                        "capture": {
                            "value": false
                        },
                        "data_type": {
                            "value": "string"
                        },
                        "description": {
                            "value": null
                        },
                        "key": {
                            "value": "Database_Name"
                        },
                        "required": {
                            "value": false
                        },
                        "value": {
                            "value": "SalesForceRepl"
                        }
                    }
                ]
            }
        }
    },
    "render_map": {
        "default_snaplex": null,
        "detail_map": {
            "11111111-1111-1111-1111-000000000000": {
                "error": {},
                "grid_x_int": 2,
                "grid_y_int": 1,
                "index": null,
                "input": {},
                "output": {},
                "recommendation_id": null,
                "rot_int": 0,
                "rot_tail_int": 0,
                "source": "snap catagory"
            },
            "11111111-1111-1111-1111-000000000001": {
                "error": {},
                "grid_x_int": 3,
                "grid_y_int": 1,
                "index": null,
                "input": {},
                "output": {},
                "recommendation_id": null,
                "rot_int": 0,
                "rot_tail_int": 0,
                "source": "snap catagory"
            },
            "11111111-1111-1111-1111-000000000002": {
                "error": {},
                "grid_x_int": 4,
                "grid_y_int": 1,
                "index": null,
                "input": {},
                "output": {},
                "recommendation_id": null,
                "rot_int": 0,
                "rot_tail_int": 0,
                "source": "snap catagory"
            },
            "11111111-1111-1111-1111-000000000003": {
                "error": {},
                "grid_x_int": 5,
                "grid_y_int": 1,
                "index": null,
                "input": {},
                "output": {},
                "recommendation_id": null,
                "rot_int": 0,
                "rot_tail_int": 0,
                "source": "snap catagory"
            }
        },
        "pan_x_num": 0,
        "pan_y_num": 0,
        "scale_ratio": 1
    },
    "snap_map": {
        "11111111-1111-1111-1111-000000000000": {
            "class_id": "com-snaplogic-snaps-sqlserver-select",
            "class_version": 3,
            "instance_id": "11111111-1111-1111-1111-000000000000",
            "property_map": {
                "account": {
                    "account_ref": {
                        "expression": false,
                        "value": {
                            "label": {
                                "expression": false,
                                "value": "MSSQL Dynamic (Official)"
                            },
                            "ref_class_id": {
                                "value": "com-snaplogic-snap-api-sql-accounts-sqlserverdynamicaccount"
                            },
                            "ref_id": {
                                "expression": false,
                                "value": null
                            }
                        }
                    }
                },
                "error": {
                    "error0": {
                        "label": {
                            "value": "error0"
                        },
                        "view_type": {
                            "value": "document"
                        }
                    },
                    "error_behavior": {
                        "value": "fail"
                    }
                },
                "info": {
                    "label": {
                        "value": "SQL Server - Select"
                    },
                    "notes": {
                        "value": "Select key matching fields to support matching of anonymous web visitors to known visitors. There are additional processes that match based on email, communities id, contact id, membership number.\n\nThis data will be merged into the a database in Snowflake.  The database is SNOWPLOW.SFDC_REPL.USER_INFO.\n\nThis pipeline must run in a groundplex since it needs access to an on premise SQLServer."
                    }
                },
                "output": {
                    "outputRows": {
                        "label": {
                            "value": "rows"
                        },
                        "view_type": {
                            "value": "document"
                        }
                    }
                },
                "settings": {
                    "autoCommit": {
                        "value": "False"
                    },
                    "execution_mode": {
                        "value": "Validate & Execute"
                    },
                    "ignoreEmptyResult": {
                        "value": false
                    },
                    "limitOffset": {
                        "expression": false,
                        "value": null
                    },
                    "limitRows": {
                        "expression": false,
                        "value": null
                    },
                    "matchDataTypes": {
                        "value": false
                    },
                    "maxRetryProp": {
                        "expression": false,
                        "value": 0
                    },
                    "orderBy": {
                        "value": []
                    },
                    "outputFields": {
                        "value": []
                    },
                    "passThrough": {
                        "value": true
                    },
                    "retryIntervalProp": {
                        "expression": false,
                        "value": 1
                    },
                    "schemaName": {
                        "expression": false,
                        "value": "\"dbo\""
                    },
                    "stagingMode": {
                        "value": "In memory"
                    },
                    "tableName": {
                        "expression": false,
                        "value": "\"dbo\".\"User2\""
                    },
                    "whereClause": {
                        "expression": false,
                        "value": "ContactId is not null"
                    }
                },
                "view_serial": 100
            }
        },
        "11111111-1111-1111-1111-000000000001": {
            "class_id": "com-snaplogic-snaps-transform-datatransform",
            "class_version": 4,
            "instance_id": "11111111-1111-1111-1111-000000000001",
            "property_map": {
                "error": {
                    "error0": {
                        "label": {
                            "value": "error0"
                        },
                        "view_type": {
                            "value": "document"
                        }
                    },
                    "error_behavior": {
                        "value": "fail"
                    }
                },
                "info": {
                    "label": {
                        "value": "Mapper"
                    },
                    "notes": {
                        "value": null
                    }
                },
                "input": {
                    "input0": {
                        "label": {
                            "value": "input0"
                        },
                        "view_type": {
                            "value": "document"
                        }
                    }
                },
                "output": {
                    "output0": {
                        "label": {
                            "value": "output0"
                        },
                        "view_type": {
                            "value": "document"
                        }
                    }
                },
                "settings": {
                    "execution_mode": {
                        "value": "Validate & Execute"
                    },
                    "nullSafeAccess": {
                        "value": false
                    },
                    "passThrough": {
                        "value": false
                    },
                    "transformations": {
                        "value": {
                            "mappingRoot": {
                                "value": "$"
                            },
                            "mappingTable": {
                                "value": [
                                    {
                                        "expression": {
                                            "expression": true,
                                            "value": "$Id"
                                        },
                                        "targetPath": {
                                            "value": "$ID"
                                        }
                                    },
                                    {
                                        "expression": {
                                            "expression": true,
                                            "value": "$ContactId"
                                        },
                                        "targetPath": {
                                            "value": "$CONTACT_ID"
                                        }
                                    },
                                    {
                                        "expression": {
                                            "expression": true,
                                            "value": "$AccountId"
                                        },
                                        "targetPath": {
                                            "value": "$ACCOUNT_ID"
                                        }
                                    },
                                    {
                                        "expression": {
                                            "expression": true,
                                            "value": "$Email"
                                        },
                                        "targetPath": {
                                            "value": "$EMAIL_ADDRESS"
                                        }
                                    },
                                    {
                                        "expression": {
                                            "expression": true,
                                            "value": "Date.now()"
                                        },
                                        "targetPath": {
                                            "value": "$MODIFIED_DATE"
                                        }
                                    }
                                ]
                            }
                        }
                    }
                },
                "view_serial": 100
            }
        },
        "11111111-1111-1111-1111-000000000002": {
            "class_id": "com-snaplogic-snaps-snowflake-bulkupsert",
            "class_version": 1,
            "instance_id": "11111111-1111-1111-1111-000000000002",
            "property_map": {
                "account": {
                    "account_ref": {
                        "expression": false,
                        "value": {
                            "label": {
                                "expression": false,
                                "value": "Snowflake Dynamic Account"
                            },
                            "ref_class_id": {
                                "value": "com-snaplogic-snap-api-sql-accounts-snowflakedynamicaccount"
                            },
                            "ref_id": {
                                "expression": false,
                                "value": null
                            }
                        }
                    }
                },
                "error": {
                    "error0": {
                        "label": {
                            "value": "error0"
                        },
                        "view_type": {
                            "value": "document"
                        }
                    },
                    "error_behavior": {
                        "value": "fail"
                    }
                },
                "info": {
                    "label": {
                        "value": "Snowflake - Bulk Upsert"
                    },
                    "notes": {
                        "value": "Table used to match anonymous web visitors to know visitors."
                    }
                },
                "input": {
                    "inputRows": {
                        "label": {
                            "value": "rows"
                        },
                        "view_type": {
                            "value": "document"
                        }
                    }
                },
                "output": {
                    "output0": {
                        "label": {
                            "value": "output0"
                        },
                        "view_type": {
                            "value": "document"
                        }
                    }
                },
                "settings": {
                    "ConvertInputKeyNamesToUpperCase": {
                        "value": false
                    },
                    "DELETE": {
                        "value": null
                    },
                    "columnList": {
                        "value": [
                            {
                                "columns": {
                                    "expression": false,
                                    "value": "ID"
                                }
                            }
                        ]
                    },
                    "encryptType": {
                        "value": "None"
                    },
                    "executable_during_suggest": {
                        "value": false
                    },
                    "execution_mode": {
                        "value": "Execute only"
                    },
                    "fileFormatObject": {
                        "expression": false,
                        "value": null
                    },
                    "fileFormatOption": {
                        "expression": false,
                        "value": null
                    },
                    "fileFormatType": {
                        "value": "NONE"
                    },
                    "kmsKey": {
                        "expression": false,
                        "value": null
                    },
                    "loadEmptyStrings": {
                        "value": true
                    },
                    "schemaName": {
                        "expression": false,
                        "value": "\"SFDC_REPL\""
                    },
                    "stagingLocation": {
                        "value": "Internal"
                    },
                    "tableName": {
                        "expression": false,
                        "value": "\"SFDC_REPL\".\"USER_INFO\""
                    }
                },
                "view_serial": 100
            }
        },
        "11111111-1111-1111-1111-000000000003": {
            "class_id": "com-snaplogic-snaps-snowflake-multiexecute",
            "class_version": 1,
            "instance_id": "11111111-1111-1111-1111-000000000003",
            "property_map": {
                "account": {
                    "account_ref": {
                        "expression": false,
                        "value": {
                            "label": {
                                "expression": false,
                                "value": "Snowflake Dynamic Account"
                            },
                            "ref_class_id": {
                                "value": "com-snaplogic-snap-api-sql-accounts-snowflakedynamicaccount"
                            },
                            "ref_id": {
                                "expression": false,
                                "value": null
                            }
                        }
                    }
                },
                "error": {
                    "error0": {
                        "label": {
                            "value": "error0"
                        },
                        "view_type": {
                            "value": "document"
                        }
                    },
                    "error_behavior": {
                        "value": "fail"
                    }
                },
                "info": {
                    "label": {
                        "value": "Snowflake - Multi Execute"
                    },
                    "notes": {
                        "value": null
                    }
                },
                "input": {
                    "input101": {
                        "label": {
                            "value": "input0"
                        },
                        "view_type": {
                            "value": "document"
                        }
                    }
                },
                "output": {
                    "output102": {
                        "label": {
                            "value": "output0"
                        },
                        "view_type": {
                            "value": "document"
                        }
                    }
                },
                "settings": {
                    "executable_during_suggest": {
                        "value": false
                    },
                    "execution_mode": {
                        "value": "Validate & Execute"
                    },
                    "sessionAutoCommit": {
                        "value": true
                    },
                    "sqlStatements": {
                        "value": [
                            {
                                "sqlStatement": {
                                    "expression": false,
                                    "value": "use database snowplow;"
                                }
                            },
                            {
                                "sqlStatement": {
                                    "expression": false,
                                    "value": "ALTER SESSION SET TIMEZONE = 'US/Eastern'"
                                }
                            },
                            {
                                "sqlStatement": {
                                    "expression": false,
                                    "value": "-- truncate the table\ntruncate table atomic.user_mapping;"
                                }
                            },
                            {
                                "sqlStatement": {
                                    "expression": false,
                                    "value": "-- pass 1 - insert communitiy user id\ninsert into atomic.user_mapping ( domain_userid, user_id, user_id_type)\n  select\n\tdomain_userid,\n\tuser_id,\n    'SFDC_COMMUNITY_ID' as user_id_type\n  from atomic.events\n  where domain_userid is not null\n\tand user_id is not null\n    and user_id like '005%'\n  group by 1,2, 3\n;"
                                }
                            },
                            {
                                "sqlStatement": {
                                    "expression": false,
                                    "value": "-- pass 2 - sfdc contact id\ninsert into atomic.user_mapping ( domain_userid, user_id, user_id_type)\n  -- contact id from the user_id query parameter\n  select\n\tdomain_userid,\n\tuser_id,\n    'SFDC_CONTACT_ID' as user_id_type\n  from atomic.events\n  where domain_userid is not null\n\tand user_id is not null\n    and user_id like '003%'\n  group by 1,2, 3\n  \n  union\n  \n  -- lookup contact id from the sfdc community id\n  select \n    e.domain_userid as domain_userid, \n    ui.contact_id as user_id, \n    'SFDC_CONTACT_ID' as user_id_type\n  from sfdc_repl.user_info ui join atomic.events e\n    on ui.id = e.user_id\n  where\n    e.user_id like '005%'\n  group by 1, 2, 3\n  order by 1, 2\n;"
                                }
                            },
                            {
                                "sqlStatement": {
                                    "expression": false,
                                    "value": "-- pass 3 - SFDC Contact Id from the query parameters (USER_ID)\ninsert into atomic.user_mapping (domain_userid, user_id, user_id_type)\n  with ids (query_params, domain_userid, collector_tstamp) as\n  (\n    select split(e.page_urlquery, '&') as query_params, domain_userid, collector_tstamp\n    --,e.*\n    from atomic.events e\n    where \n    e.page_urlquery is not null\n    order by e.collector_tstamp\n  )\n  select domain_userid, \n     split (value::string, '=' )[1]::string as user_id,\n     'SFDC_CONTACT_ID' as user_type_id\n  from  ids\n  , lateral flatten( input => query_params )\n  where value::string like 'user_id=003%'\n  group by 1 , 2, 3\n;"
                                }
                            },
                            {
                                "sqlStatement": {
                                    "expression": false,
                                    "value": "-- pass 4 - get email addresses from mechanic net\ninsert into atomic.user_mapping (domain_userid, user_id, user_id_type)\n    select domain_userid,\n        left (UNSTRUCT_EVENT_COM_SNOWPLOWANALYTICS_SNOWPLOW_CHANGE_FORM_1['value']::string, 64) as user_id, \n        'EMAIL' as user_id_type\n    from atomic.events\n    where page_urlhost like  '%mechanicnet.com'\n    and UNSTRUCT_EVENT_COM_SNOWPLOWANALYTICS_SNOWPLOW_CHANGE_FORM_1::string like '%.com%'\n--    and collector_tstamp >= current_date() -30\n    group by 1, 2, 3;"
                                }
                            },
                            {
                                "sqlStatement": {
                                    "expression": false,
                                    "value": "-- pass 6 - use full membership no from the renew site\ninsert into atomic.user_mapping (domain_userid, user_id, user_id_type)\n  with step_1  (collector_tstamp, domain_userid, event_id, membership_number,postal_code, id_length) as \n  (\n    select collector_tstamp, domain_userid, event_id\n    ,replace(UNSTRUCT_EVENT_COM_SNOWPLOWANALYTICS_SNOWPLOW_SUBMIT_FORM_1:elements[0].value, ' ', '')  ||\n     UNSTRUCT_EVENT_COM_SNOWPLOWANALYTICS_SNOWPLOW_SUBMIT_FORM_1:elements[1].value as membernumber\n    ,UNSTRUCT_EVENT_COM_SNOWPLOWANALYTICS_SNOWPLOW_SUBMIT_FORM_1:elements[2].value as postal_code\n    , length (replace(UNSTRUCT_EVENT_COM_SNOWPLOWANALYTICS_SNOWPLOW_SUBMIT_FORM_1:elements[0].value, ' ', '')  ||\n     UNSTRUCT_EVENT_COM_SNOWPLOWANALYTICS_SNOWPLOW_SUBMIT_FORM_1:elements[1].value) as id_length\n\n    from \n    snowplow.atomic.events\n    where refr_urlhost in ( 'renew.carolinas.aaa.com') --'members.carolinas.aaa.com', \n    --and event = 'page_view'\n    and page_urlquery is not null\n    and UNSTRUCT_EVENT_COM_SNOWPLOWANALYTICS_SNOWPLOW_SUBMIT_FORM_1 is not null\n    and UNSTRUCT_EVENT_COM_SNOWPLOWANALYTICS_SNOWPLOW_SUBMIT_FORM_1:elements[0].name = 'clubPrefix'\n    --and user_id is not null\n    order by collector_tstamp desc\n  )\n  select \n      step_1.domain_userid as domain_userid, \n      step_1.membership_number as user_id, \n      'FULL_MEMBERSHIP_NO' as user_id_type  \n    from step_1 join \"PROD_STAGE\".\"FINS\".\"MEMBERSHIPEXPORT\" me\n      on step_1.membership_number = me.fullmembernum  and step_1.postal_code = left(me.ZIP, 5)\n    group by 1, 2, 3;"
                                }
                            },
                            {
                                "sqlStatement": {
                                    "expression": false,
                                    "value": "-- pass 7 - members ( query params, form post with email)\ninsert into atomic.user_mapping (domain_userid, user_id, user_id_type)\n  with step_1 (domain_userid, Account_id, Contact_id, Email_Address) as\n\n  (select \n      domain_userid,\n      split (split (page_urlquery, '&')[0], '=')[1] as Account_Id, \n      split (split (page_urlquery, '&')[1], '=')[1] as Contact_Id,\n      replace (split (split (page_urlquery, '&')[2], '=')[1], '%40', '@') as Email_Address\n  from atomic.events e\n  where e.page_urlhost = 'members.carolinas.aaa.com'\n    and e.page_urlquery like 'accid=%'\n    and (refr_urlquery is not null or page_urlquery is not null)\n    and split (split (page_urlquery, '&')[2], '=')[0] = 'customerEmailAddress'\n  group by 1,2,3,4\n  ),\n  contacts as \n    (select domain_userid, CONTACT_ID as user_id, 'SFDC_CONTACT_ID' as user_id_type from step_1 group by 1,2,3 ),\n  emails as \n    (select domain_userid, Email_Address as user_id, 'EMAIL' as user_id_type from step_1  group by 1,2,3 )\n\n  select domain_userid, user_id, user_id_type from emails\n  union \n  select domain_userid, user_id, user_id_type from contacts\n\n  ;"
                                }
                            },
                            {
                                "sqlStatement": {
                                    "expression": false,
                                    "value": "-- pass 5 - \ninsert into atomic.user_mapping (domain_userid, user_id, user_id_type)\n  select um.domain_userid, ui.contact_id as user_id, 'SFDC_CONTACT_ID' as user_id_type\n  from atomic.user_mapping um join snowplow.sfdc_repl.user_info ui\n    on um.user_id = ui.email_address and um.user_id_type = 'EMAIL'\n  where \n    user_id_type = 'EMAIL'\n  group by 1, 2, 3\n;"
                                }
                            },
                            {
                                "sqlStatement": {
                                    "expression": false,
                                    "value": "merge into atomic.user_mapping_counts mpc using \n  (\n    select current_date() as MEASURE_DATE, \n    user_id_type, \n    count (distinct domain_userid ) as DOMAiN_USERID_COUNT, \n    count (distinct user_id) as USER_ID_COUNT\n    from atomic.user_mapping\n    group by 1, 2\n    UNION\n\n    select current_date() as MEASURE_DATE, \n      'DOMAIN_USER_ID' AS user_id_type, \n       count (distinct domain_userid ), \n       count (distinct user_id)\n    from atomic.user_mapping\n    group by 1, 2\n\n  ) t2 on mpc.measure_date = t2.measure_date \n    and mpc.user_id_type = t2.user_id_type\n    \n  when matched then \n    update set mpc.measure_date = t2.measure_date,\n      mpc.user_id_type = t2.user_id_type,\n      mpc.domain_userid_count = t2.domain_userid_count,\n      mpc.user_id_count = t2.user_id_count,\n      mpc.UPDATE_DATE = current_timestamp()\n  when not matched then \n    insert (measure_date, user_id_type, domain_userid_count, user_id_count, UPDATE_DATE) \n      values (t2.measure_date, t2.user_id_type, t2.domain_userid_count ,t2.user_id_count, current_timestamp());"
                                }
                            }
                        ]
                    },
                    "useResultQuery": {
                        "value": false
                    }
                },
                "view_serial": 102
            }
        }
    }
}
